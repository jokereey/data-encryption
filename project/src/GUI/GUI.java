/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import dataencryption.Algorithm;
import java.io.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author WIKTOR
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        wyborPlikow.setCurrentDirectory(new File("/C:/Users/WIKTOR/Desktop/ZaszyfrowaneHasla")); //set here  your own path
        wyborPlikow.setMultiSelectionEnabled(true);
        wyborPlikow.setAcceptAllFileFilterUsed(true);
        wyborPlikow.setFileFilter(new FiltrRozszerzen("Pola tekstowe", ROZSZERZENIA_TEKSTOWE));

        this.setTitle("Data encryption");
        this.setResizable(false);
        this.setAlwaysOnTop(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N
        jButton1.setText("Encrypt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 100, -1));

        jLabel2.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N
        jLabel2.setText("Domain/page");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 170, 20));

        jLabel3.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N
        jLabel3.setText("Login");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, -1, -1));
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 170, -1));

        jLabel4.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N
        jLabel4.setText("password");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 170, 20));

        jLabel1.setFont(new java.awt.Font("Felix Titling", 0, 18)); // NOI18N
        jLabel1.setText("Data encryption");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 230, -1));

        jButton2.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, -1, -1));

        jButton4.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N
        jButton4.setText("Decrypt file");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 410));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!jTextField1.getText().trim().isEmpty() && !jTextField2.getText().trim().isEmpty() && !jTextField3.getText().trim().isEmpty()) {
            String tekst = jTextField1.getText() + "-" + jTextField2.getText() + "-" + jTextField3.getText();
            String zaszyfrowanyTekst = Algorithm.encrypt(tekst);
            File newFile = new File("/C:/Users/WIKTOR/Desktop/ZaszyfrowaneHasla/daneZaszyfrowane.txt"); //set here  your own path
            if (!newFile.exists())
            try {
                newFile.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {

                BufferedWriter zapisz = new BufferedWriter(new FileWriter("/C:/Users/WIKTOR/Desktop/ZaszyfrowaneHasla/daneZaszyfrowane.txt", true)); //set here  your own path
                zapisz.append(zaszyfrowanyTekst);
                zapisz.newLine();
                zapisz.close();
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
               JOptionPane.showMessageDialog(this, "Your data has been encrypted successfully and saved on the disk.");
                clearTextFields();
            }
        } else {
            JOptionPane.showMessageDialog(this, "you must fill in all the fields.");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int a = wyborPlikow.showOpenDialog(null);

        if (a == 0) {
            System.out.println(jTextField1.getText());
            Algorithm szyfrowanie = new Algorithm();
            File daneOdszyfrowane = new File("/C:/Users/WIKTOR/Desktop/ZaszyfrowaneHasla/daneOdszyfrowane.txt"); ///set here  your own path

            String odszyfrowanaLinia = new String("");
            String zaszyfrowanaLinia = "";
            String sciezkaDoZaszyfrowanegoPliku = wyborPlikow.getSelectedFile().getAbsolutePath();
            File plikZaszyfrowany = new File(sciezkaDoZaszyfrowanegoPliku);
            System.out.println(sciezkaDoZaszyfrowanegoPliku);

            try {
                if (!daneOdszyfrowane.exists()) {
                    daneOdszyfrowane.createNewFile();
                }

                BufferedReader CzytaczZaszyfrowany = new BufferedReader(new FileReader(plikZaszyfrowany)); //reading from ecrypted file
                BufferedWriter zapisz = new BufferedWriter(new FileWriter(daneOdszyfrowane, false));
                zaszyfrowanaLinia = CzytaczZaszyfrowany.readLine();
                while (zaszyfrowanaLinia != null) {
                    odszyfrowanaLinia = Algorithm.decrypt(zaszyfrowanaLinia);
                    zapisz.write(odszyfrowanaLinia);
                    zapisz.newLine();
                    zaszyfrowanaLinia = CzytaczZaszyfrowany.readLine();

                }
                CzytaczZaszyfrowany.close();
                zapisz.close();
                JOptionPane.showMessageDialog(this, "Your data has been decrypted successfully.");

            } catch (IOException ex) {
                ex.getStackTrace();
                JOptionPane.showMessageDialog(this, "Error.");
                
            } 

        }


    }//GEN-LAST:event_jButton4ActionPerformed

    public void clearTextFields() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    final JFileChooser wyborPlikow = new JFileChooser();

    String[] ROZSZERZENIA_TEKSTOWE = new String[]{".txt", ".xml", ".pdf"};


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}

class FiltrRozszerzen extends javax.swing.filechooser.FileFilter {

    public FiltrRozszerzen(String opis, String[] rozszerzenia) {
        this.opis = opis;
        this.rozszerzenia = rozszerzenia;
    }

    public boolean accept(File f) {
        for (int i = 0; i < this.rozszerzenia.length; i++) {
            if (f.getName().toLowerCase().endsWith(this.rozszerzenia[i]) || f.isDirectory()) {
                return true;
            }
        }

        return false;
    }

    public String getDescription() {
        return opis;
    }

    private String opis;
    private String[] rozszerzenia;

}
